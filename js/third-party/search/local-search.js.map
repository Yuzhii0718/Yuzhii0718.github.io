{"version":3,"names":["document","addEventListener","CONFIG","path","console","warn","localSearch","LocalSearch","top_n_per_article","localsearch","unescape","input","querySelector","container","inputEventFunction","isfetched","searchText","value","trim","toLowerCase","keywords","split","resultItems","length","getResultItems","innerHTML","sort","left","right","includedCount","hitCount","id","stats","i18n","hits","replace","map","result","item","join","pjax","refresh","highlightSearchWords","preload","fetchData","window","querySelectorAll","forEach","element","body","classList","add","setTimeout","focus","onPopupClose","remove","event","target","ctrlKey","metaKey","key","preventDefault"],"sources":["local-search.js.map"],"sourcesContent":["/* global CONFIG, pjax, LocalSearch */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (!CONFIG.path) {\n    // Search DB path\n    console.warn('`hexo-generator-searchdb` plugin is not installed!');\n    return;\n  }\n  const localSearch = new LocalSearch({\n    path             : CONFIG.path,\n    top_n_per_article: CONFIG.localsearch.top_n_per_article,\n    unescape         : CONFIG.localsearch.unescape\n  });\n\n  const input = document.querySelector('.search-input');\n  const container = document.querySelector('.search-result-container');\n\n  const inputEventFunction = () => {\n    if (!localSearch.isfetched) return;\n    const searchText = input.value.trim().toLowerCase();\n    const keywords = searchText.split(/[-\\s]+/);\n    let resultItems = [];\n    if (searchText.length > 0) {\n      // Perform local searching\n      resultItems = localSearch.getResultItems(keywords);\n    }\n    if (keywords.length === 1 && keywords[0] === '') {\n      container.innerHTML = '<div class=\"search-result-icon\"><i class=\"fa fa-search fa-5x\"></i></div>';\n    } else if (resultItems.length === 0) {\n      container.innerHTML = '<div class=\"search-result-icon\"><i class=\"far fa-frown fa-5x\"></i></div>';\n    } else {\n      resultItems.sort((left, right) => {\n        if (left.includedCount !== right.includedCount) {\n          return right.includedCount - left.includedCount;\n        } else if (left.hitCount !== right.hitCount) {\n          return right.hitCount - left.hitCount;\n        }\n        return right.id - left.id;\n      });\n      const stats = CONFIG.i18n.hits.replace('${hits}', resultItems.length);\n\n      container.innerHTML = `<div class=\"search-stats\">${stats}</div>\n        <hr>\n        <ul class=\"search-result-list\">${resultItems.map(result => result.item).join('')}</ul>`;\n      if (typeof pjax === 'object') pjax.refresh(container);\n    }\n  };\n\n  localSearch.highlightSearchWords(document.querySelector('.post-body'));\n  if (CONFIG.localsearch.preload) {\n    localSearch.fetchData();\n  }\n\n  input.addEventListener('input', inputEventFunction);\n  window.addEventListener('search:loaded', inputEventFunction);\n\n  // Handle and trigger popup window\n  document.querySelectorAll('.popup-trigger').forEach(element => {\n    element.addEventListener('click', () => {\n      document.body.classList.add('search-active');\n      // Wait for search-popup animation to complete\n      setTimeout(() => input.focus(), 500);\n      if (!localSearch.isfetched) localSearch.fetchData();\n    });\n  });\n\n  // Monitor main search box\n  const onPopupClose = () => {\n    document.body.classList.remove('search-active');\n  };\n\n  document.querySelector('.search-pop-overlay').addEventListener('click', event => {\n    if (event.target === document.querySelector('.search-pop-overlay')) {\n      onPopupClose();\n    }\n  });\n  document.querySelector('.popup-btn-close').addEventListener('click', onPopupClose);\n  document.addEventListener('pjax:success', () => {\n    localSearch.highlightSearchWords(document.querySelector('.post-body'));\n    onPopupClose();\n  });\n  window.addEventListener('keydown', event => {\n    if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n      event.preventDefault();\n      document.body.classList.add('search-active');\n      setTimeout(() => input.focus(), 500);\n      if (!localSearch.isfetched) localSearch.fetchData();\n    }\n  });\n  window.addEventListener('keyup', event => {\n    if (event.key === 'Escape') {\n      onPopupClose();\n    }\n  });\n});\n"],"mappings":"AAEAA,SAASC,iBAAiB,oBAAoB,KAC5C,IAAKC,OAAOC,KAGV,YADAC,QAAQC,KAAK,sDAGf,MAAMC,EAAc,IAAIC,YAAY,CAClCJ,KAAmBD,OAAOC,KAC1BK,kBAAmBN,OAAOO,YAAYD,kBACtCE,SAAmBR,OAAOO,YAAYC,WAGlCC,EAAQX,SAASY,cAAc,iBAC/BC,EAAYb,SAASY,cAAc,4BAEnCE,EAAqB,KACzB,IAAKR,EAAYS,UAAW,OAC5B,MAAMC,EAAaL,EAAMM,MAAMC,OAAOC,cAChCC,EAAWJ,EAAWK,MAAM,UAClC,IAAIC,EAAc,GAKlB,GAJIN,EAAWO,OAAS,IAEtBD,EAAchB,EAAYkB,eAAeJ,IAEnB,IAApBA,EAASG,QAAgC,KAAhBH,EAAS,GACpCP,EAAUY,UAAY,gFACjB,GAA2B,IAAvBH,EAAYC,OACrBV,EAAUY,UAAY,+EACjB,CACLH,EAAYI,MAAK,CAACC,EAAMC,IAClBD,EAAKE,gBAAkBD,EAAMC,cACxBD,EAAMC,cAAgBF,EAAKE,cACzBF,EAAKG,WAAaF,EAAME,SAC1BF,EAAME,SAAWH,EAAKG,SAExBF,EAAMG,GAAKJ,EAAKI,KAEzB,MAAMC,EAAQ9B,OAAO+B,KAAKC,KAAKC,QAAQ,UAAWb,EAAYC,QAE9DV,EAAUY,UAAY,6BAA6BO,iEAEhBV,EAAYc,KAAIC,GAAUA,EAAOC,OAAMC,KAAK,WAC3D,iBAATC,MAAmBA,KAAKC,QAAQ5B,EAC7C,GAGFP,EAAYoC,qBAAqB1C,SAASY,cAAc,eACpDV,OAAOO,YAAYkC,SACrBrC,EAAYsC,YAGdjC,EAAMV,iBAAiB,QAASa,GAChC+B,OAAO5C,iBAAiB,gBAAiBa,GAGzCd,SAAS8C,iBAAiB,kBAAkBC,SAAQC,IAClDA,EAAQ/C,iBAAiB,SAAS,KAChCD,SAASiD,KAAKC,UAAUC,IAAI,iBAE5BC,YAAW,IAAMzC,EAAM0C,SAAS,KAC3B/C,EAAYS,WAAWT,EAAYsC,WAAW,GACnD,IAIJ,MAAMU,EAAe,KACnBtD,SAASiD,KAAKC,UAAUK,OAAO,gBAAgB,EAGjDvD,SAASY,cAAc,uBAAuBX,iBAAiB,SAASuD,IAClEA,EAAMC,SAAWzD,SAASY,cAAc,wBAC1C0C,GACF,IAEFtD,SAASY,cAAc,oBAAoBX,iBAAiB,QAASqD,GACrEtD,SAASC,iBAAiB,gBAAgB,KACxCK,EAAYoC,qBAAqB1C,SAASY,cAAc,eACxD0C,GAAc,IAEhBT,OAAO5C,iBAAiB,WAAWuD,KAC5BA,EAAME,SAAWF,EAAMG,UAA0B,MAAdH,EAAMI,MAC5CJ,EAAMK,iBACN7D,SAASiD,KAAKC,UAAUC,IAAI,iBAC5BC,YAAW,IAAMzC,EAAM0C,SAAS,KAC3B/C,EAAYS,WAAWT,EAAYsC,YAC1C,IAEFC,OAAO5C,iBAAiB,SAASuD,IACb,WAAdA,EAAMI,KACRN,GACF,GACA","ignoreList":[]}