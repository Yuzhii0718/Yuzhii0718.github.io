{"version":3,"names":["firebase","initializeApp","apiKey","CONFIG","firestore","projectId","getCount","doc","increaseCount","get","then","d","count","exists","data","set","articles","collection","document","addEventListener","page","isPost","title","querySelector","textContent","trim","hostname","location","localStorage","getItem","setItem","innerText","isHome","promises","querySelectorAll","map","element","Promise","all","counts","metas","forEach","val","idx"],"sources":["firestore.js.map"],"sourcesContent":["/* global CONFIG, firebase */\n\nfirebase.initializeApp({\n  apiKey   : CONFIG.firestore.apiKey,\n  projectId: CONFIG.firestore.projectId\n});\n\n(function() {\n  const getCount = (doc, increaseCount) => {\n    // IncreaseCount will be false when not in article page\n    return doc.get().then(d => {\n      // Has no data, initialize count\n      let count = d.exists ? d.data().count : 0;\n      // If first view this article\n      if (increaseCount) {\n        // Increase count\n        count++;\n        doc.set({\n          count\n        });\n      }\n      return count;\n    });\n  };\n\n  const db = firebase.firestore();\n  const articles = db.collection(CONFIG.firestore.collection);\n\n  document.addEventListener('page:loaded', () => {\n\n    if (CONFIG.page.isPost) {\n      // Fix issue #118\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n      const title = document.querySelector('.post-title').textContent.trim();\n      const doc = articles.doc(title);\n      let increaseCount = CONFIG.hostname === location.hostname;\n      if (localStorage.getItem(title)) {\n        increaseCount = false;\n      } else {\n        // Mark as visited\n        localStorage.setItem(title, true);\n      }\n      getCount(doc, increaseCount).then(count => {\n        document.querySelector('.firestore-visitors-count').innerText = count;\n      });\n    } else if (CONFIG.page.isHome) {\n      const promises = [...document.querySelectorAll('.post-title')].map(element => {\n        const title = element.textContent.trim();\n        const doc = articles.doc(title);\n        return getCount(doc);\n      });\n      Promise.all(promises).then(counts => {\n        const metas = document.querySelectorAll('.firestore-visitors-count');\n        counts.forEach((val, idx) => {\n          metas[idx].innerText = val;\n        });\n      });\n    }\n  });\n})();\n"],"mappings":"AAEAA,SAASC,cAAc,CACrBC,OAAWC,OAAOC,UAAUF,OAC5BG,UAAWF,OAAOC,UAAUC,YAG9B,WACE,MAAMC,EAAW,CAACC,EAAKC,IAEdD,EAAIE,MAAMC,MAAKC,IAEpB,IAAIC,EAAQD,EAAEE,OAASF,EAAEG,OAAOF,MAAQ,EASxC,OAPIJ,IAEFI,IACAL,EAAIQ,IAAI,CACNH,WAGGA,CAAK,IAKVI,EADKhB,SAASI,YACAa,WAAWd,OAAOC,UAAUa,YAEhDC,SAASC,iBAAiB,eAAe,KAEvC,GAAIhB,OAAOiB,KAAKC,OAAQ,CAGtB,MAAMC,EAAQJ,SAASK,cAAc,eAAeC,YAAYC,OAC1DlB,EAAMS,EAAST,IAAIe,GACzB,IAAId,EAAgBL,OAAOuB,WAAaC,SAASD,SAC7CE,aAAaC,QAAQP,GACvBd,GAAgB,EAGhBoB,aAAaE,QAAQR,GAAO,GAE9BhB,EAASC,EAAKC,GAAeE,MAAKE,IAChCM,SAASK,cAAc,6BAA6BQ,UAAYnB,CAAK,GAEzE,MAAO,GAAIT,OAAOiB,KAAKY,OAAQ,CAC7B,MAAMC,EAAW,IAAIf,SAASgB,iBAAiB,gBAAgBC,KAAIC,IACjE,MAAMd,EAAQc,EAAQZ,YAAYC,OAC5BlB,EAAMS,EAAST,IAAIe,GACzB,OAAOhB,EAASC,EAAI,IAEtB8B,QAAQC,IAAIL,GAAUvB,MAAK6B,IACzB,MAAMC,EAAQtB,SAASgB,iBAAiB,6BACxCK,EAAOE,SAAQ,CAACC,EAAKC,KACnBH,EAAMG,GAAKZ,UAAYW,CAAG,GAC1B,GAEN,IAEH,CApDD","ignoreList":[]}