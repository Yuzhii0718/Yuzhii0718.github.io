{"version":3,"names":["calendar","orderBy","showLocation","offsetMax","offsetMin","showDeleted","singleEvents","maxResults","Object","assign","CONFIG","now","Date","timeMax","timeMin","setHours","getHours","params","key","api_key","toISOString","request_url","URL","calendar_id","buildEventDOM","tense","event","start","end","durationFormat","weekday","hour","minute","relativeTime","current","previous","msPerHour","msPerMinute","msPerDay","msPerMonth","msPerYear","elapsed","Math","abs","round","getRelativeTime","duration","toLocaleTimeString","location","description","summary","fetchData","eventList","document","querySelector","fetch","href","then","response","json","data","items","length","innerHTML","prevEnd","utc","getTimezoneOffset","forEach","dateTime","date","getTime","insertAdjacentHTML","entries","param","searchParams","append","fetchDataTimer","setInterval","addEventListener","clearInterval"],"sources":["schedule.js.map"],"sourcesContent":["/* global CONFIG */\n\n// https://developers.google.com/calendar/api/v3/reference/events/list\n(function() {\n  // Initialization\n  const calendar = {\n    orderBy     : 'startTime',\n    showLocation: false,\n    offsetMax   : 72,\n    offsetMin   : 4,\n    showDeleted : false,\n    singleEvents: true,\n    maxResults  : 250\n  };\n\n  // Read config form theme config file\n  Object.assign(calendar, CONFIG.calendar);\n\n  const now = new Date();\n  const timeMax = new Date();\n  const timeMin = new Date();\n\n  timeMax.setHours(now.getHours() + calendar.offsetMax);\n  timeMin.setHours(now.getHours() - calendar.offsetMin);\n\n  // Build URL\n  const params = {\n    key         : calendar.api_key,\n    orderBy     : calendar.orderBy,\n    timeMax     : timeMax.toISOString(),\n    timeMin     : timeMin.toISOString(),\n    showDeleted : calendar.showDeleted,\n    singleEvents: calendar.singleEvents,\n    maxResults  : calendar.maxResults\n  };\n\n  const request_url = new URL(`https://www.googleapis.com/calendar/v3/calendars/${calendar.calendar_id}/events`);\n  Object.entries(params).forEach(param => request_url.searchParams.append(...param));\n\n  function getRelativeTime(current, previous) {\n    const msPerMinute = 60 * 1000;\n    const msPerHour = msPerMinute * 60;\n    const msPerDay = msPerHour * 24;\n    const msPerMonth = msPerDay * 30;\n    const msPerYear = msPerDay * 365;\n\n    let elapsed = current - previous;\n    const tense = elapsed > 0 ? ' ago' : ' later';\n\n    elapsed = Math.abs(elapsed);\n\n    if (elapsed < msPerHour) {\n      return Math.round(elapsed / msPerMinute) + ' minutes' + tense;\n    } else if (elapsed < msPerDay) {\n      return Math.round(elapsed / msPerHour) + ' hours' + tense;\n    } else if (elapsed < msPerMonth) {\n      return 'about ' + Math.round(elapsed / msPerDay) + ' days' + tense;\n    } else if (elapsed < msPerYear) {\n      return 'about ' + Math.round(elapsed / msPerMonth) + ' months' + tense;\n    }\n\n    return 'about ' + Math.round(elapsed / msPerYear) + ' years' + tense;\n  }\n\n  function buildEventDOM(tense, event, start, end) {\n    const durationFormat = {\n      weekday: 'short',\n      hour   : '2-digit',\n      minute : '2-digit'\n    };\n    const relativeTime = tense === 'now' ? 'NOW' : getRelativeTime(now, start);\n    const duration = start.toLocaleTimeString([], durationFormat) + ' - ' + end.toLocaleTimeString([], durationFormat);\n\n    let location = '';\n    if (calendar.showLocation && event.location) {\n      location = `<span class=\"event-location event-details\">${event.location}</span>`;\n    }\n    let description = '';\n    if (event.description) {\n      description = `<span class=\"event-description event-details\">${event.description}</span>`;\n    }\n\n    const eventContent = `<section class=\"event event-${tense}\">\n        <h2 class=\"event-summary\">\n          ${event.summary}\n          <span class=\"event-relative-time\">${relativeTime}</span>\n        </h2>\n        ${location}\n        <span class=\"event-duration event-details\">${duration}</span>\n        ${description}\n      </section>`;\n    return eventContent;\n  }\n\n  function fetchData() {\n    const eventList = document.querySelector('.event-list');\n    if (!eventList) return;\n\n    fetch(request_url.href).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.items.length === 0) {\n        eventList.innerHTML = '<hr>';\n        return;\n      }\n      // Clean the event list\n      eventList.innerHTML = '';\n      let prevEnd = 0; // used to decide where to insert an <hr>\n      const utc = new Date().getTimezoneOffset() * 60000;\n\n      data.items.forEach(event => {\n        // Parse data\n        const start = new Date(event.start.dateTime || (new Date(event.start.date).getTime() + utc));\n        const end = new Date(event.end.dateTime || (new Date(event.end.date).getTime() + utc));\n\n        let tense = 'now';\n        if (end < now) {\n          tense = 'past';\n        } else if (start > now) {\n          tense = 'future';\n        }\n\n        if (tense === 'future' && prevEnd < now) {\n          eventList.insertAdjacentHTML('beforeend', '<hr>');\n        }\n\n        eventList.insertAdjacentHTML('beforeend', buildEventDOM(tense, event, start, end));\n        prevEnd = end;\n      });\n    });\n  }\n\n  fetchData();\n  const fetchDataTimer = setInterval(fetchData, 60000);\n  document.addEventListener('pjax:send', () => {\n    clearInterval(fetchDataTimer);\n  });\n})();\n"],"mappings":"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","ignoreList":[]}