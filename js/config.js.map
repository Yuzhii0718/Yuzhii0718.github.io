{"version":3,"names":["window","NexT","staticConfig","variableConfig","update","name","targetEle","document","querySelector","parsedConfig","text","JSON","parse","Object","assign","CONFIG","Proxy","get","overrideConfig","existing","override","set","target","prop","value","addEventListener"],"sources":["config.js.map"],"sourcesContent":["if (!window.NexT) window.NexT = {};\n\n(function() {\n  const className = 'next-config';\n\n  const staticConfig = {};\n  let variableConfig = {};\n\n  const parse = text => JSON.parse(text || '{}');\n\n  const update = name => {\n    const targetEle = document.querySelector(`.${className}[data-name=\"${name}\"]`);\n    if (!targetEle) return;\n    const parsedConfig = parse(targetEle.text);\n    if (name === 'main') {\n      Object.assign(staticConfig, parsedConfig);\n    } else {\n      variableConfig[name] = parsedConfig;\n    }\n  };\n\n  update('main');\n\n  window.CONFIG = new Proxy({}, {\n    get(overrideConfig, name) {\n      let existing;\n      if (name in staticConfig) {\n        existing = staticConfig[name];\n      } else {\n        if (!(name in variableConfig)) update(name);\n        existing = variableConfig[name];\n      }\n\n      // For unset override and mixable existing\n      if (!(name in overrideConfig) && typeof existing === 'object') {\n        // Get ready to mix.\n        overrideConfig[name] = {};\n      }\n\n      if (name in overrideConfig) {\n        const override = overrideConfig[name];\n\n        // When mixable\n        if (typeof override === 'object' && typeof existing === 'object') {\n          // Mix, proxy changes to the override.\n          return new Proxy({ ...existing, ...override }, {\n            set(target, prop, value) {\n              target[prop] = value;\n              override[prop] = value;\n              return true;\n            }\n          });\n        }\n\n        return override;\n      }\n\n      // Only when not mixable and override hasn't been set.\n      return existing;\n    }\n  });\n\n  document.addEventListener('pjax:success', () => {\n    variableConfig = {};\n  });\n})();\n"],"mappings":"AAAKA,OAAOC,OAAMD,OAAOC,KAAO,CAAC,GAEjC,WACE,MAEMC,EAAe,CAAC,EACtB,IAAIC,EAAiB,CAAC,EAEtB,MAEMC,EAASC,IACb,MAAMC,EAAYC,SAASC,cAAc,2BAA4BH,OACrE,IAAKC,EAAW,OAChB,MAAMG,GALMC,EAKeJ,EAAUI,KALjBC,KAAKC,MAAMF,GAAQ,OAA3BA,MAMC,SAATL,EACFQ,OAAOC,OAAOZ,EAAcO,GAE5BN,EAAeE,GAAQI,CACzB,EAGFL,EAAO,QAEPJ,OAAOe,OAAS,IAAIC,MAAM,CAAC,EAAG,CAC5B,GAAAC,CAAIC,EAAgBb,GAClB,IAAIc,EAcJ,GAbId,KAAQH,EACViB,EAAWjB,EAAaG,IAElBA,KAAQF,GAAiBC,EAAOC,GACtCc,EAAWhB,EAAeE,IAItBA,KAAQa,GAAuC,iBAAbC,IAEtCD,EAAeb,GAAQ,CAAC,GAGtBA,KAAQa,EAAgB,CAC1B,MAAME,EAAWF,EAAeb,GAGhC,MAAwB,iBAAbe,GAA6C,iBAAbD,EAElC,IAAIH,MAAM,IAAKG,KAAaC,GAAY,CAC7CC,IAAG,CAACC,EAAQC,EAAMC,KAChBF,EAAOC,GAAQC,EACfJ,EAASG,GAAQC,GACV,KAKNJ,CACT,CAGA,OAAOD,CACT,IAGFZ,SAASkB,iBAAiB,gBAAgB,KACxCtB,EAAiB,CAAC,CAAC,GAEtB,CA/DD","ignoreList":[]}